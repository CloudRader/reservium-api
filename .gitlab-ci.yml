stages:
  - test
  - build

variables:
  IMAGE: $DOCKER_HUB_USER/reservation-backend
  VERSION: $CI_COMMIT_SHORT_SHA
  VERSION_TAG: latest

# ---------- TEST ----------
mypy-check:
  stage: test
  image: python:3.14
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_TAG == null
  before_script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip
    - pip install uv
    - uv sync
    - cd reservation-app
    - chmod +x ./scripts/mypy.sh
  script:
    - ./scripts/mypy.sh
  interruptible: true

ruff-check:
  stage: test
  image: python:3.14
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_TAG == null
  before_script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip
    - pip install uv
    - uv sync
    - cd reservation-app
    - chmod +x ./scripts/lint_ruff.sh
  script:
    - ./scripts/lint_ruff.sh
  interruptible: true

# ---------- BUILD ----------
build-and-push-image:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $BUILD_ON_BRANCH != null && $CI_COMMIT_BRANCH == $BUILD_ON_BRANCH && $CI_OPEN_MERGE_REQUESTS == null
  image:
    name: docker:stable-git
    entrypoint: [""]
  services:
    - docker:27.5.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: '1'
    GIT_STRATEGY: clone
  script:
    - echo "Logging in to Docker Hub..."
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin

    # Prepare tags
    - export SERVICE_IMAGE="$IMAGE:$VERSION"
    - export SERVICE_IMAGE_VERSION_TAG="$IMAGE:$VERSION_TAG"
    - export SERVICE_IMAGE_GIT="$IMAGE:git-$CI_COMMIT_SHA"

    # Build the Docker image
    - echo "Building and tagging image..."
    - docker build -t "$SERVICE_IMAGE" -t "$SERVICE_IMAGE_VERSION_TAG" -t "$SERVICE_IMAGE_GIT" ${BUILD_CONTEXT:-.} ${dockerfile_arg:-}

    # Push all tags to Docker Hub
    - echo "Pushing image tags..."
    - docker push "$SERVICE_IMAGE"
    - docker push "$SERVICE_IMAGE_VERSION_TAG"
    - docker push "$SERVICE_IMAGE_GIT"

# ---------- PROMOTE ----------
promote-image:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: docker:stable-git
    entrypoint: [""]
  services:
    - docker:27.5.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    GIT_STRATEGY: none
  script:
    # Log in to Docker Hub
    - echo "Logging in to Docker Hub..."
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin

    # Define images
    - IMAGE_FROM="$IMAGE:git-$CI_COMMIT_SHA"
    - IMAGE_TO="$IMAGE:$CI_COMMIT_TAG"
    - LEGACY_IMAGE_TO="$IMAGE:${CI_COMMIT_TAG#v}"

    # Promote image tags
    - echo "Pulling and tagging image for promotion..."
    - docker pull "$IMAGE_FROM"
    - docker tag "$IMAGE_FROM" "$IMAGE_TO"
    - docker tag "$IMAGE_FROM" "$LEGACY_IMAGE_TO"

    # Push promoted tags
    - docker push "$IMAGE_TO"
    - docker push "$LEGACY_IMAGE_TO"