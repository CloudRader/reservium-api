"""add name convention

Revision ID: 4e0141cdd288
Revises: 9cde93d7ffff
Create Date: 2025-07-10 20:48:33.507107

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4e0141cdd288"
down_revision: Union[str, None] = "9cde93d7ffff"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("calendar_reservation_type_key"), "calendar", type_="unique"
    )
    op.create_unique_constraint(
        op.f("uq_calendar_reservation_type"), "calendar", ["reservation_type"]
    )
    op.drop_constraint(
        op.f("idx_uq_calendar_mini_service"),
        "calendar_mini_service_association",
        type_="unique",
    )
    op.create_unique_constraint(
        op.f("uq_calendar_mini_service_association_calendar_id_mini_service_id"),
        "calendar_mini_service_association",
        ["calendar_id", "mini_service_id"],
    )
    op.drop_constraint(
        op.f("uq_mini_service_access_group"), "mini_service", type_="unique"
    )
    op.drop_constraint(
        op.f("reservation_service_alias_key"), "reservation_service", type_="unique"
    )
    op.drop_constraint(
        op.f("reservation_service_name_key"), "reservation_service", type_="unique"
    )
    op.create_unique_constraint(
        op.f("uq_reservation_service_alias"), "reservation_service", ["alias"]
    )
    op.create_unique_constraint(
        op.f("uq_reservation_service_name"), "reservation_service", ["name"]
    )
    op.drop_constraint(op.f("user_username_key"), "user", type_="unique")
    op.create_unique_constraint(op.f("uq_user_username"), "user", ["username"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_user_username"), "user", type_="unique")
    op.create_unique_constraint(
        op.f("user_username_key"),
        "user",
        ["username"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_constraint(
        op.f("uq_reservation_service_name"), "reservation_service", type_="unique"
    )
    op.drop_constraint(
        op.f("uq_reservation_service_alias"), "reservation_service", type_="unique"
    )
    op.create_unique_constraint(
        op.f("reservation_service_name_key"),
        "reservation_service",
        ["name"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("reservation_service_alias_key"),
        "reservation_service",
        ["alias"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("uq_mini_service_access_group"),
        "mini_service",
        ["access_group"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_constraint(
        op.f("uq_calendar_mini_service_association_calendar_id_mini_service_id"),
        "calendar_mini_service_association",
        type_="unique",
    )
    op.create_unique_constraint(
        op.f("idx_uq_calendar_mini_service"),
        "calendar_mini_service_association",
        ["calendar_id", "mini_service_id"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_constraint(op.f("uq_calendar_reservation_type"), "calendar", type_="unique")
    op.create_unique_constraint(
        op.f("calendar_reservation_type_key"),
        "calendar",
        ["reservation_type"],
        postgresql_nulls_not_distinct=False,
    )
    # ### end Alembic commands ###
